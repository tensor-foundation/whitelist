//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! <https://github.com/kinobi-so/kinobi>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum TensorWhitelistError {
    /// 6000 - passed in cosigner doesnt have the rights to do this
    #[error("passed in cosigner doesnt have the rights to do this")]
    BadCosigner = 0x1770,
    /// 6001 - missing all 3 verification methods: at least one must be present
    #[error("missing all 3 verification methods: at least one must be present")]
    MissingVerification = 0x1771,
    /// 6002 - missing name
    #[error("missing name")]
    MissingName = 0x1772,
    /// 6003 - bad whitelist
    #[error("bad whitelist")]
    BadWhitelist = 0x1773,
    /// 6004 - proof provided exceeds the limit of 32 hashes
    #[error("proof provided exceeds the limit of 32 hashes")]
    ProofTooLong = 0x1774,
    /// 6005 - passed in owner doesnt have the rights to do this
    #[error("passed in owner doesnt have the rights to do this")]
    BadOwner = 0x1775,
    /// 6006 - failed voc verification
    #[error("failed voc verification")]
    FailedVocVerification = 0x1776,
    /// 6007 - failed fvc verification
    #[error("failed fvc verification")]
    FailedFvcVerification = 0x1777,
    /// 6008 - failed merkle proof verification
    #[error("failed merkle proof verification")]
    FailedMerkleProofVerification = 0x1778,
    /// 6009 - no whitelist conditions provided
    #[error("no whitelist conditions provided")]
    NoConditions = 0x1779,
    /// 6010 - invalid authority
    #[error("invalid authority")]
    InvalidAuthority = 0x177A,
    /// 6011 - condition at index not a merkle root
    #[error("condition at index not a merkle root")]
    NotMerkleRoot = 0x177B,
    /// 6012 - invalid whitelist index
    #[error("invalid whitelist index")]
    InvalidWhitelistIndex = 0x177C,
    /// 6013 - too many conditions
    #[error("too many conditions")]
    TooManyConditions = 0x177D,
    /// 6014 - cannot have empty conditions
    #[error("cannot have empty conditions")]
    EmptyConditions = 0x177E,
    /// 6015 - too many merkle proofs
    #[error("too many merkle proofs")]
    TooManyMerkleProofs = 0x177F,
    /// 6016 - whitelist is frozen
    #[error("whitelist is frozen")]
    WhitelistIsFrozen = 0x1780,
    /// 6017 - bad mint proof
    #[error("bad mint proof")]
    BadMintProof = 0x1781,
    /// 6018 - missing mint proof
    #[error("missing mint proof")]
    MissingMintProof = 0x1782,
}

impl solana_program::program_error::PrintProgramError for TensorWhitelistError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
