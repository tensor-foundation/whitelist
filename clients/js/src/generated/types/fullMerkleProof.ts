/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs';

export type FullMerkleProof = { proof: Array<Uint8Array>; leaf: Uint8Array };

export type FullMerkleProofArgs = FullMerkleProof;

export function getFullMerkleProofEncoder(): Encoder<FullMerkleProofArgs> {
  return getStructEncoder([
    ['proof', getArrayEncoder(getBytesEncoder({ size: 32 }))],
    ['leaf', getBytesEncoder({ size: 32 })],
  ]);
}

export function getFullMerkleProofDecoder(): Decoder<FullMerkleProof> {
  return getStructDecoder([
    ['proof', getArrayDecoder(getBytesDecoder({ size: 32 }))],
    ['leaf', getBytesDecoder({ size: 32 })],
  ]);
}

export function getFullMerkleProofCodec(): Codec<
  FullMerkleProofArgs,
  FullMerkleProof
> {
  return combineCodec(getFullMerkleProofEncoder(), getFullMerkleProofDecoder());
}
