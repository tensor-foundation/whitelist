/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type FullMerkleProof = {
  proof: Array<ReadonlyUint8Array>;
  leaf: ReadonlyUint8Array;
};

export type FullMerkleProofArgs = FullMerkleProof;

export function getFullMerkleProofEncoder(): Encoder<FullMerkleProofArgs> {
  return getStructEncoder([
    ['proof', getArrayEncoder(fixEncoderSize(getBytesEncoder(), 32))],
    ['leaf', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getFullMerkleProofDecoder(): Decoder<FullMerkleProof> {
  return getStructDecoder([
    ['proof', getArrayDecoder(fixDecoderSize(getBytesDecoder(), 32))],
    ['leaf', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getFullMerkleProofCodec(): Codec<
  FullMerkleProofArgs,
  FullMerkleProof
> {
  return combineCodec(getFullMerkleProofEncoder(), getFullMerkleProofDecoder());
}
